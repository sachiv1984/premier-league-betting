name: Update Premier League Betting Analysis

on:
  schedule:
    - cron: '0 8 * * *'  # Daily at 08:00 UTC
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  update-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üü¢ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üóÇÔ∏è Create public and data directories if missing
        run: |
          mkdir -p ./public
          mkdir -p ./data

      - name: üåê Download and parse Premier League CSV
        run: |
          echo "Downloading and parsing Premier League CSV..."
          node -e "
          import fs from 'fs/promises';
          import https from 'https';
          import { parse } from 'csv-parse/sync';

          const CSV_URL = 'https://www.football-data.co.uk/mmz4281/2526/E0.csv';

          async function downloadCSV(url) {
            return new Promise((resolve, reject) => {
              https.get(url, (res) => {
                if (res.statusCode !== 200) {
                  return reject(new Error(\`Failed to get CSV, status \${res.statusCode}\`));
                }
                let data = '';
                res.on('data', (chunk) => data += chunk);
                res.on('end', () => resolve(data));
              }).on('error', reject);
            });
          }

          async function main() {
            try {
              console.log('Downloading CSV...');
              const csvData = await downloadCSV(CSV_URL);

              console.log('Parsing CSV...');
              const records = parse(csvData, {
                columns: true,
                skip_empty_lines: true,
              });

              console.log(\`Parsed \${records.length} records\`);

              // Save raw JSON locally (optional)
              await fs.writeFile('./public/fixtures-latest.json', JSON.stringify(records, null, 2));

              // Save CSV locally for further analysis
              await fs.writeFile('./data/fixtures.csv', csvData);

              console.log('CSV and JSON files saved successfully.');
            } catch (err) {
              console.error('Error:', err);
              process.exit(1);
            }
          }

          main();
          "
        shell: node

      - name: üìÑ Verify CSV data file exists
        run: |
          if [ ! -f ./data/fixtures.csv ]; then
            echo "ERROR: CSV file ./data/fixtures.csv not found!"
            exit 1
          fi
          ls -la ./data/fixtures.csv

      - name: üîç Run betting analysis script
        run: |
          echo "Running betting analysis from CSV data..."
          node update-analysis.js 1
          echo "Analysis complete!"
          ls -la ./public
        env:
          ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}
          API_FOOTBALL_KEY: ${{ secrets.API_FOOTBALL_KEY }}

      - name: üöÄ Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

      - name: üì± Notify success
        if: success()
        run: |
          echo "‚úÖ Betting analysis updated successfully!"
          echo "üåê Site live at: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
